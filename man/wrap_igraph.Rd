% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/igraph.R
\name{wrap_igraph}
\alias{wrap_igraph}
\title{Run an igraph function on an sfnetwork object}
\usage{
wrap_igraph(.data, .f, ..., .force = FALSE, .message = TRUE)
}
\arguments{
\item{.data}{An object of class \code{\link{sfnetwork}}.}

\item{.f}{An function from the \code{\link[igraph]{igraph}} package that
accepts a graph as its first argument, and returns a graph.}

\item{...}{Arguments passed on to \code{.f}.}

\item{.force}{Should network validity checks be skipped? Defaults to
\code{FALSE}, meaning that network validity checks are executed when
returning the new network. These checks guarantee a valid spatial network
structure. For the nodes, this means that they all should have \code{POINT}
geometries. In the case of spatially explicit edges, it is also checked that
all edges have \code{LINESTRING} geometries, nodes and edges have the same
CRS and boundary points of edges match their corresponding node coordinates.
These checks are important, but also time consuming. If you are already sure
your input data meet the requirements, the checks are unnecessary and can be
turned off to improve performance.}

\item{.message}{Should informational messages (those messages that are
neither warnings nor errors) be printed when constructing the network?
Defaults to \code{TRUE}.}
}
\value{
An object of class \code{\link{sfnetwork}}.
}
\description{
Since \code{\link{sfnetwork}} objects inherit \code{\link[igraph]{igraph}}
objects, any igraph function can be called on a sfnetwork. However, if this
function returns a network, it will be an igraph object rather than a
sfnetwork object. With \code{\link{wrap_igraph}}, such a function will
preserve the sfnetwork class, after checking if the network returned by
igraph still has a valid spatial network structure.
}
\examples{
oldpar = par(no.readonly = TRUE)
par(mar = c(1,1,1,1), mfrow = c(1,2))

net = as_sfnetwork(mozart, "delaunay", directed = FALSE)
mst = wrap_igraph(net, igraph::mst, .message = FALSE)
mst

plot(net)
plot(mst)

par(oldpar)

}
